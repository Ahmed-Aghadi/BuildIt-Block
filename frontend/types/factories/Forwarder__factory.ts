/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Forwarder, ForwarderInterface } from "../Forwarder";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "eip712Domain",
    inputs: [],
    outputs: [
      {
        name: "fields",
        type: "bytes1",
        internalType: "bytes1",
      },
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "version",
        type: "string",
        internalType: "string",
      },
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "verifyingContract",
        type: "address",
        internalType: "address",
      },
      {
        name: "salt",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "extensions",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "execute",
    inputs: [
      {
        name: "request",
        type: "tuple",
        internalType: "struct ERC2771Forwarder.ForwardRequestData",
        components: [
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "value",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint48",
            internalType: "uint48",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "executeBatch",
    inputs: [
      {
        name: "requests",
        type: "tuple[]",
        internalType: "struct ERC2771Forwarder.ForwardRequestData[]",
        components: [
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "value",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint48",
            internalType: "uint48",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "refundReceiver",
        type: "address",
        internalType: "address payable",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "nonces",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "verify",
    inputs: [
      {
        name: "request",
        type: "tuple",
        internalType: "struct ERC2771Forwarder.ForwardRequestData",
        components: [
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "value",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deadline",
            type: "uint48",
            internalType: "uint48",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "EIP712DomainChanged",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "ExecutedForwardRequest",
    inputs: [
      {
        name: "signer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "nonce",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "success",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressInsufficientBalance",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC2771ForwarderExpiredRequest",
    inputs: [
      {
        name: "deadline",
        type: "uint48",
        internalType: "uint48",
      },
    ],
  },
  {
    type: "error",
    name: "ERC2771ForwarderInvalidSigner",
    inputs: [
      {
        name: "signer",
        type: "address",
        internalType: "address",
      },
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC2771ForwarderMismatchedValue",
    inputs: [
      {
        name: "requestedValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "msgValue",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC2771UntrustfulTarget",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
      {
        name: "forwarder",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAccountNonce",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "currentNonce",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidShortString",
    inputs: [],
  },
  {
    type: "error",
    name: "StringTooLong",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
    ],
  },
] as const;

const _bytecode =
  "0x61016060405234801561001157600080fd5b5060408051808201825260098152682337b93bb0b93232b960b91b602080830191909152825180840190935260018352603160f81b90830152908190610058826000610103565b61012052610067816001610103565b61014052815160208084019190912060e052815190820120610100524660a0526100f460e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05250610350565b600060208351101561011f5761011883610136565b9050610130565b8161012a848261021e565b5060ff90505b92915050565b600080829050601f8151111561016a578260405163305a27a960e01b815260040161016191906102dd565b60405180910390fd5b80516101758261032c565b179392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806101a757607f821691505b6020821081036101c757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610219576000816000526020600020601f850160051c810160208610156101f65750805b601f850160051c820191505b8181101561021557828155600101610202565b5050505b505050565b81516001600160401b038111156102375761023761017d565b61024b816102458454610193565b846101cd565b602080601f83116001811461028057600084156102685750858301515b600019600386901b1c1916600185901b178555610215565b600085815260208120601f198616915b828110156102af57888601518255948401946001909101908401610290565b50858210156102cd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808352835180602085015260005b8181101561030b578581018301518582016040015282016102ef565b506000604082860101526040601f19601f8301168501019250505092915050565b805160208083015191908110156101c75760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516112bd6103aa600039600061045b0152600061042901526000610c8d01526000610c6501526000610bc001526000610bea01526000610c1401526112bd6000f3fe60806040526004361061005a5760003560e01c806384b0196e1161004357806384b0196e146100e5578063ccf96b4a1461010d578063df905caf1461012257600080fd5b806319d8d38c1461005f5780637ecebe0014610094575b600080fd5b34801561006b57600080fd5b5061007f61007a366004610e19565b610135565b60405190151581526020015b60405180910390f35b3480156100a057600080fd5b506100d76100af366004610e7d565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205490565b60405190815260200161008b565b3480156100f157600080fd5b506100fa610167565b60405161008b9796959493929190610efe565b61012061011b366004610fc0565b6101c9565b005b610120610130366004610e19565b6102f6565b60008060008061014485610383565b509250925092508280156101555750815b801561015e5750805b95945050505050565b60006060806000806000606061017b610422565b610183610454565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b73ffffffffffffffffffffffffffffffffffffffff811615600080805b858110156102965786868281811061020057610200611046565b90506020028101906102129190611075565b6102209060400135846110b3565b9250600061025188888481811061023957610239611046565b905060200281019061024b9190611075565b86610481565b90508061028d5787878381811061026a5761026a611046565b905060200281019061027c9190611075565b61028a9060400135846110b3565b92505b506001016101e6565b503482146102de576040517f70647f79000000000000000000000000000000000000000000000000000000008152600481018390523460248201526044015b60405180910390fd5b80156102ee576102ee84826106e3565b505050505050565b8060400135341461033f57604080517f70647f790000000000000000000000000000000000000000000000000000000081529082013560048201523460248201526044016102d5565b61034a816001610481565b610380576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600080600080600080610395876107be565b90925090506103b26103ad6040890160208a01610e7d565b610940565b426103c360a08a0160808b016110ed565b65ffffffffffff16101583801561041157506103e260208a018a610e7d565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b919750955093509150509193509193565b606061044f7f00000000000000000000000000000000000000000000000000000000000000006000610a09565b905090565b606061044f7f00000000000000000000000000000000000000000000000000000000000000006001610a09565b600080600080600061049287610383565b935093509350935085156105bd5783610506576104b56040880160208901610e7d565b6040517fd2650cd100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911660048201523060248201526044016102d5565b826105585761051b60a08801608089016110ed565b6040517f94eef58a00000000000000000000000000000000000000000000000000000000815265ffffffffffff90911660048201526024016102d5565b816105bd578061056b6020890189610e7d565b6040517fc845a05600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9283166004820152911660248201526044016102d5565b8380156105c75750815b80156105d05750825b156106d95773ffffffffffffffffffffffffffffffffffffffff8116600090815260026020526040812080546001810190915590506060880135600061061c60408b0160208c01610e7d565b905060408a0135600061063260a08d018d611115565b61063f60208f018f610e7d565b60405160200161065193929190611181565b6040516020818303038152906040529050600080600083516020850186888af19a505a9050610680818e610ab6565b604080518781528c1515602082015273ffffffffffffffffffffffffffffffffffffffff8916917f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c910160405180910390a25050505050505b5050505092915050565b8047101561071f576040517fcd7860590000000000000000000000000000000000000000000000000000000081523060048201526024016102d5565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610779576040519150601f19603f3d011682016040523d82523d6000602084013e61077e565b606091505b50509050806107b9576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b600080808061091a6107d360c0870187611115565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061091492507f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac915061083b905060208a018a610e7d565b61084b60408b0160208c01610e7d565b60408b013560608c01356108656100af60208f018f610e7d565b8d608001602081019061087891906110ed565b8e8060a001906108889190611115565b6040516108969291906111ba565b60408051918290038220602083019990995273ffffffffffffffffffffffffffffffffffffffff97881690820152959094166060860152608085019290925260a084015260c083015265ffffffffffff1660e08201526101008101919091526101200160405160208183030381529060405280519060200120610ad2565b90610b1a565b5090925090506000816003811115610934576109346111ca565b14959194509092505050565b6040513060248201526000908190604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f572b6c050000000000000000000000000000000000000000000000000000000017815282519293506000928392839290918391895afa92503d915060005190508280156109f3575060208210155b80156109ff5750600081115b9695505050505050565b606060ff8314610a2357610a1c83610b67565b9050610ab0565b818054610a2f906111f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5b906111f9565b8015610aa85780601f10610a7d57610100808354040283529160200191610aa8565b820191906000526020600020905b815481529060010190602001808311610a8b57829003601f168201915b505050505090505b92915050565b610ac5603f606083013561124c565b821015610ace57fe5b5050565b6000610ab0610adf610ba6565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b60008060008351604103610b545760208401516040850151606086015160001a610b4688828585610cde565b955095509550505050610b60565b50508151600091506002905b9250925092565b60606000610b7483610dd8565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b60003073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148015610c0c57507f000000000000000000000000000000000000000000000000000000000000000046145b15610c3657507f000000000000000000000000000000000000000000000000000000000000000090565b61044f604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610d195750600091506003905082610dce565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610d6d573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116610dc457506000925060019150829050610dce565b9250600091508190505b9450945094915050565b600060ff8216601f811115610ab0576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060208284031215610e2b57600080fd5b813567ffffffffffffffff811115610e4257600080fd5b820160e08185031215610e5457600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461038057600080fd5b600060208284031215610e8f57600080fd5b8135610e5481610e5b565b6000815180845260005b81811015610ec057602081850181015186830182015201610ea4565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b7fff00000000000000000000000000000000000000000000000000000000000000881681526000602060e06020840152610f3b60e084018a610e9a565b8381036040850152610f4d818a610e9a565b6060850189905273ffffffffffffffffffffffffffffffffffffffff8816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b81811015610fae57835183529284019291840191600101610f92565b50909c9b505050505050505050505050565b600080600060408486031215610fd557600080fd5b833567ffffffffffffffff80821115610fed57600080fd5b818601915086601f83011261100157600080fd5b81358181111561101057600080fd5b8760208260051b850101111561102557600080fd5b6020928301955093505084013561103b81610e5b565b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126110a957600080fd5b9190910192915050565b80820180821115610ab0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000602082840312156110ff57600080fd5b813565ffffffffffff81168114610e5457600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261114a57600080fd5b83018035915067ffffffffffffffff82111561116557600080fd5b60200191503681900382131561117a57600080fd5b9250929050565b8284823760609190911b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169101908152601401919050565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600181811c9082168061120d57607f821691505b602082108103611246577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600082611282577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220f8694d8decf83772d6280c6fa07f96682addbcb1d6162793ff1f958faf671aa764736f6c63430008190033";

type ForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Forwarder__factory extends ContractFactory {
  constructor(...args: ForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Forwarder> {
    return super.deploy(overrides || {}) as Promise<Forwarder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Forwarder {
    return super.attach(address) as Forwarder;
  }
  override connect(signer: Signer): Forwarder__factory {
    return super.connect(signer) as Forwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForwarderInterface {
    return new utils.Interface(_abi) as ForwarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Forwarder {
    return new Contract(address, _abi, signerOrProvider) as Forwarder;
  }
}
